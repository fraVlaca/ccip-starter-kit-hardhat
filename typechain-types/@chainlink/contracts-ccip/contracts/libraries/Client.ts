/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../../common";

export interface ClientInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "EVM_EXTRA_ARGS_V1_TAG"
      | "GENERIC_EXTRA_ARGS_V2_TAG"
      | "SVM_ACCOUNT_BYTE_SIZE"
      | "SVM_EXTRA_ARGS_MAX_ACCOUNTS"
      | "SVM_EXTRA_ARGS_V1_TAG"
      | "SVM_MESSAGING_ACCOUNTS_OVERHEAD"
      | "SVM_TOKEN_TRANSFER_DATA_OVERHEAD"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "EVM_EXTRA_ARGS_V1_TAG",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GENERIC_EXTRA_ARGS_V2_TAG",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SVM_ACCOUNT_BYTE_SIZE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SVM_EXTRA_ARGS_MAX_ACCOUNTS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SVM_EXTRA_ARGS_V1_TAG",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SVM_MESSAGING_ACCOUNTS_OVERHEAD",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SVM_TOKEN_TRANSFER_DATA_OVERHEAD",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "EVM_EXTRA_ARGS_V1_TAG",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GENERIC_EXTRA_ARGS_V2_TAG",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SVM_ACCOUNT_BYTE_SIZE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SVM_EXTRA_ARGS_MAX_ACCOUNTS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SVM_EXTRA_ARGS_V1_TAG",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SVM_MESSAGING_ACCOUNTS_OVERHEAD",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SVM_TOKEN_TRANSFER_DATA_OVERHEAD",
    data: BytesLike
  ): Result;
}

export interface Client extends BaseContract {
  connect(runner?: ContractRunner | null): Client;
  waitForDeployment(): Promise<this>;

  interface: ClientInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  EVM_EXTRA_ARGS_V1_TAG: TypedContractMethod<[], [string], "view">;

  GENERIC_EXTRA_ARGS_V2_TAG: TypedContractMethod<[], [string], "view">;

  SVM_ACCOUNT_BYTE_SIZE: TypedContractMethod<[], [bigint], "view">;

  SVM_EXTRA_ARGS_MAX_ACCOUNTS: TypedContractMethod<[], [bigint], "view">;

  SVM_EXTRA_ARGS_V1_TAG: TypedContractMethod<[], [string], "view">;

  SVM_MESSAGING_ACCOUNTS_OVERHEAD: TypedContractMethod<[], [bigint], "view">;

  SVM_TOKEN_TRANSFER_DATA_OVERHEAD: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "EVM_EXTRA_ARGS_V1_TAG"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "GENERIC_EXTRA_ARGS_V2_TAG"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SVM_ACCOUNT_BYTE_SIZE"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "SVM_EXTRA_ARGS_MAX_ACCOUNTS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "SVM_EXTRA_ARGS_V1_TAG"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SVM_MESSAGING_ACCOUNTS_OVERHEAD"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "SVM_TOKEN_TRANSFER_DATA_OVERHEAD"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
